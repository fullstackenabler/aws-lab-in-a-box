# This file defines a Kubernetes Deployment that creates a simple NGINX web server.
# It is part of the sample application used to demonstrate EKS functionality
# and StrongDM's Kubernetes integration capabilities.
#
# Key components of this deployment:
# - 3 replicas for high availability demonstration
# - Node affinity for both AMD64 and ARM64 architectures
# - Public NGINX container from AWS ECR public gallery
# - Standard port 80 exposure for HTTP traffic
#
# This sample is intentionally simple to allow quick verification of EKS access
# through StrongDM while demonstrating core Kubernetes concepts.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: eks-sample-linux-deployment
  namespace: default
  labels:
    app: eks-sample-linux-app
spec:
  replicas: 3  # Creates 3 identical pods for high availability
  selector:
    matchLabels:
      app: eks-sample-linux-app
  template:
    metadata:
      labels:
        app: eks-sample-linux-app
    spec:
      # Enable deployment on different processor architectures for flexibility
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - name: nginx
        image: public.ecr.aws/nginx/nginx:1.23  # Use NGINX from AWS public ECR
        ports:
        - name: http
          containerPort: 80  # Standard HTTP port
        imagePullPolicy: IfNotPresent
      # Ensure deployment only on Linux-based nodes
      nodeSelector:
        kubernetes.io/os: linux
